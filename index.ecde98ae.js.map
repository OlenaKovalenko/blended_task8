{"mappings":"YAAO,IAAMA,EAAO,CAChBC,KAAMC,SAASC,cAAc,cAC7BC,KAAMF,SAASC,cAAc,eCF3BE,EAAU,WAET,SAASC,EAAQC,GACpB,IAAMC,EAAQC,IACdD,EAAME,KAAKH,GACXI,aAAaC,QAAQP,EAASQ,KAAKC,UAAUN,G,CAG1C,SAASC,I,IACPM,EAAP,OAAgD,QAAzCA,EAAAF,KAAKG,MAAML,aAAaM,QAAQZ,WAAS,IAAzCU,IAA6C,E,CAG/C,SAASG,EAAWC,GACzB,IAEMC,EAFQX,IAEYY,QAAO,SAAAC,G,OAAQA,EAAKH,KAAOA,C,IAErDR,aAAaC,QAAQP,EAASQ,KAAKC,UAAUM,G,CChBxC,ICICG,EDcGC,EAAS,W,IAACC,EAAIC,UAAAC,OAAA,YAAAD,UAAA,GAAAA,UAAA,GAAG,G,OAC1BE,OAAOC,gBAAgB,IAAIC,WAAWL,IAAOM,QAAO,SAACZ,EAAIa,GAWvD,OAREb,IAFFa,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,G,GAGP,G,EE9BE,SAASG,IACZ,IAAM5B,EAAO,CAACY,GAAGK,KAKjB,OAHA,IAAIY,SAASC,MAAMC,eAAeC,SAAQ,SAACC,EAAOC,GAC9ClC,EAAKkC,GAAQD,C,IAEVjC,C,CCNJ,SAASmC,EAAWnC,GACzB,IAAMgB,EAAS,sCAEGoB,OAFmCpC,EAAKY,GAAG,mGAG5CwB,OADCpC,EAAKqC,SAAS,4BACDD,OAAdpC,EAAKsC,SAAS,2BAE/B7C,EAAKI,KAAK0C,mBAAmB,YAAavB,E,CCc5CvB,EAAKC,KAAK8C,iBAAiB,UClBpB,SAAsBV,GAC3BA,EAAMW,iBAEN,IAAMzC,EAAO4B,IACb7B,EAAQC,GACRmC,EAAWnC,GACX8B,EAAMC,cAAcW,O,IDatBjD,EAAKI,KAAK2C,iBAAiB,SErBpB,SAAoBV,GAEzB,GAAKA,EAAMa,OAAOC,UAAUC,SAAS,UAArC,CAIA,IAAMC,EAAKhB,EAAMa,OAAOI,QAAQ,mBAC1BnC,EAAKkC,EAAGE,QAAQpC,GAEtBkC,EAAGG,SAEHtC,EAAWC,EART,C,ILAII,EADQd,IACOgD,KAAI,SAAAnC,GACvB,MAAO,sCAESqB,OAF6BrB,EAAKH,GAAG,mGAGtCwB,OADCrB,EAAKsB,SAAS,4BACDD,OAAdrB,EAAKuB,SAAS,0B,IAG/B7C,EAAKI,KAAKsD,UAAYnC,EAAOoC,KAAK,G","sources":["src/js/refs.js","src/js/localStorageAPI.js","node_modules/nanoid/index.browser.js","src/js/renderCarts.js","src/js/createCart.js","src/js/renderCard.js","src/index.js","src/js/onFormSubmit.js","src/js/deleteCard.js"],"sourcesContent":["export const refs = {\n    form: document.querySelector('#task-form'),\n    list: document.querySelector('#task-list')\n};","const API_KEY = 'cartsKey';\n\nexport function addCart(cart) {\n    const carts = getCarts();\n    carts.push(cart);\n    localStorage.setItem(API_KEY, JSON.stringify(carts));\n}\n\nexport function getCarts() {\n  return JSON.parse(localStorage.getItem(API_KEY)) ?? [];\n}\n\nexport function removeCart(id) {\n  const carts = getCarts();\n\n  const cartsUpdate = carts.filter(item => item.id !== id);\n\n  localStorage.setItem(API_KEY, JSON.stringify(cartsUpdate));\n}","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { refs } from './refs';\nimport { getCarts } from './localStorageAPI';\n\nexport function renderCarts() {\n  const items = getCarts();\n  const markup = items.map(item => {\n    return `<li class=\"task-list-item\" data-id=${item.id}>\n              <button class=\"task-list-item-btn js-del\">Удалить</button>\n              <h3>${item.taskName}</h3>\n              <p>${item.taskText}</p>\n            </li>`;\n  });\n  refs.list.innerHTML = markup.join('');\n}\n","import { nanoid } from \"nanoid\";\n\nexport function createCart() {\n    const cart = {id:nanoid()};\n\n    new FormData(event.currentTarget).forEach((value, name) => {\n        cart[name] = value;  \n    })\n    return cart;\n}","import { refs } from './refs';\n\nexport function renderCard(cart) {\n  const markup = `<li class=\"task-list-item\" data-id=${cart.id}>\n              <button class=\"task-list-item-btn js-del\">Удалить</button>\n              <h3>${cart.taskName}</h3>\n              <p>${cart.taskText}</p>\n            </li>`;\n  refs.list.insertAdjacentHTML('beforeend', markup);\n}\n","/**\n * Створи список справ.\n * На сторінці є два інпути які має вводиться назва і текст задачі.\n * Після натискання на кнопку \"Додати\" завдання додається до списку #task-list.\n *\n * Розмітка картки задачі\n * <li class=\"task-list-item\">\n *     <button class=\"task-list-item-btn\">Удалить</button>\n *     <h3>Заголовок</h3>\n *     <p>Текст</p>\n * </li>\n *\n * У кожної картки має бути кнопка \"Видалити\", щоб можна було\n * прибрати завдання зі списку.\n * Список із завданнями має бути доступним після перезавантаження сторінки.\n */\n\nimport { refs } from './js/refs';\nimport { renderCarts } from './js/renderCarts';\nimport { deleteCard } from './js/deleteCard';\nimport { onFormSubmit } from './js/onFormSubmit';\n\nrefs.form.addEventListener('submit', onFormSubmit);\nrefs.list.addEventListener(\"click\", deleteCard);\n\nrenderCarts();\n\n\n\n\n","import { addCart } from './localStorageAPI';\nimport { createCart } from './createCart';\nimport { renderCard } from './renderCard';\n\nexport function onFormSubmit(event) {\n  event.preventDefault();\n\n  const cart = createCart();\n  addCart(cart);\n  renderCard(cart);\n  event.currentTarget.reset();\n}","import { removeCart } from './localStorageAPI';\n\nexport function deleteCard(event) {\n\n  if (!event.target.classList.contains(\"js-del\")) {\n    return;\n  }\n\n  const li = event.target.closest(\".task-list-item\");\n  const id = li.dataset.id;\n  \n  li.remove();\n\n  removeCart(id);\n}"],"names":["$37e33676934ad046$export$21666b427502ea6d","form","document","querySelector","list","$48d731dcdd8bc0d3$var$API_KEY","$48d731dcdd8bc0d3$export$2a94af17393dc4b4","cart","carts","$48d731dcdd8bc0d3$export$5d7a5f12642a4bf","push","localStorage","setItem","JSON","stringify","ref","parse","getItem","$48d731dcdd8bc0d3$export$d4c9a3e4597b9ab","id","cartsUpdate","filter","item","markup","$8069ef7e6126e429$export$ac4959f4f1338dfc","size","arguments","length","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","$249e115fa76d4e74$export$1f96ef276f4967ea","FormData","event","currentTarget","forEach","value","name","$4281325854b5f9f0$export$e9aece8f6847aae6","concat","taskName","taskText","insertAdjacentHTML","addEventListener","preventDefault","reset","target","classList","contains","li","closest","dataset","remove","map","innerHTML","join"],"version":3,"file":"index.ecde98ae.js.map"}